#summary Log-based patterns inference and pattern-based log-reduction.

= LOg-based Patterns Inference =

|| [https://googledrive.com/host/0B1lIbYI9LkEJTVZhWkNPY1FTQUk/source/lopi_source.7z src] || [https://googledrive.com/host/0B1lIbYI9LkEJTVZhWkNPY1FTQUk/docs/index.html doc] || [https://googledrive.com/host/0B1lIbYI9LkEJTVZhWkNPY1FTQUk/binaries binary] ||

Lopi is a tool to infer simple algebraic patterns from logs, and is also a tool to reduce logs using such patterns. It works on logs in the FITTEST format. The format is described the [http://www.cs.uu.nl/research/techreps/repo/CS-2012/2012-014.pdf UU-CS-2012-014] technical report.

A log can be thought to be a sequence of events of some program. These events may have parameters, and are assumed to operate on the program state. The state is assumed to be logged as well. Algebraic patterns are equations over these events, e.g. a(x);b(y) = b(y), stating that doing a;b on any state of the program will lead to the same state as just doing a single b. So, the first functionality of lopi is to infer properties like these form a given set of logs. Its second functionality is to reduce a given log using a set of such equations, such that the resulting log is equivalent, in the sense that there exists a real execution that would produce the reduced log, and produces the same final state logged in the original log.

If you want to cite lopi, you can cite this:

[http://dx.doi.org/10.1007/978-3-642-41707-8_15 Guided Algebraic Specification Mining for Failure Simplification], A. Elyasov, I.S.W.B. Prasetya, J. Hage, in the 25th IFIP International Conference on Testing Software and Systems (ICTSS), LNCS 8254, Springer, 2013. 