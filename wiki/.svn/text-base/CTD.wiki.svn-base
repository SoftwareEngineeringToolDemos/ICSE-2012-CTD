#summary IBM FOCUS, Combinatorial Test Design

= IBM Focus/CTD: Combinatorial Test Design =

|| [http://researcher.watson.ibm.com/researcher/view_project.php?id=1871  to get it] ||

The IBM Focus tool is a comprehensive tool for test-oriented system modeling, for model based test planning, and for functional coverage analysis. Its system modeling and test planning are based on computing Cartesian products of system or test aspects, with restrictions applied to the models and henceforth to the computation. The generated test plans are combinatorial, thus placing the IBM Focus tool in the family of combinatorial test design tools (in this respect, in similarity to the CTE tool).

The Focus tool also provides advanced code coverage analysis capabilities. It imports code coverage data from other tools and analyzes various coverage aspects. In particular it excels in identifying system parts which are poorly covered, and in planning tests to optimally cover those system parts.

Focus provides advanced reports, independent of the programming language and the platform. The Focus graphical user interface (GUI) allows manual activation, viewing and manipulation of its modeling and combinatorial test design capabilities and of its coverage analysis. Additionally, the GUI can be bypassed to facilitate automatic or semi-automatic test planning and coverage analysis. The results of the tool and its reports can be exported into HTML, spreadsheet, and text files.

The main functionality of the Focus tool is as follows. Given a system under test (SUT), system attributes and attribute values are extracted. Additionally, restrictions are placed on the attributes, their values, and the dependencies among them. Based on these, a combinatorial model of the system is generated by Focus. Focus may be stopped at this stage, however the common usage proceeds to test plan generation. The tool can generate a plan from scratch, or alternatively start from an existing plan. Either way, the plan is optimized to meet coverage, cost and functional requirements. Manual changes are allowed via the GUI, supporting "what-if" style modifications. Once the test plan is optimized and meets user requirements, Focus can automatically generate the needed test cases.

Links:

  * Aviad Zlotnick's [https://www.research.ibm.com/haifa/dept/svt/papers/CTD_Introduction.pdf  presentation], giving an overview of Combinatorial Test Design and the FoCuS tool.
  * [https://www.research.ibm.com/haifa/dept/svt/vts.html IBM's related tools]