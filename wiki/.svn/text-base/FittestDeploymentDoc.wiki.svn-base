#summary How to deploy the SUT for the FITTEST ITE

=How to Deploy the SUT for Testing with the [FittestIte FITTEST ITE]=

Essentially, ITE is an Eclipse-based tool that allows a tester to infer behavior models and oracles from logs, and to generate test-cases from these models and use them to test the SUT. Being an Internet application, the SUT is usually not a single program. Rather, it is a _distributed system_, e.g. consisting of a server and multiple clients. 

Deploying the ITE itself is a matter of running Eclipse, presuming you have installed the ITE plugin in your Eclipse. However, there are additional things that have to be prepared in order to facilitate logging. For example, the SUT's deployment procedure has to be adjusted to let our loggers to be deployed alongside the SUT, so that we can collect logs. Depending on the testing goals, we may want to log the server, or to log the clients. The ITE does not assume the SUT to run on the same machine as the ITE itself (this would be unrealistic), so its standard way of collecting the logs is by doing this _remotely_. To facilitate this, it uses _FITTEST agents_ ; these have to be deployed as well. Essentially, a FITTEST agent allows any program P, after it registers itself to the agent, to remotely exchange messages with the ITE. In the case of loggers, this allows the ITE to remotely control them.

The entire SUT may also be duplicated on a set of dedicated testing machines. Such a setup is often called _testing environment_ as opposed to the _production environment_. So, a typical deployment architecture is illustrated below, where we would have both the production and test environments of the SUT, each consists of its own server and clients part of the SUT. Then we have the ITE running on its own machine, and agents deployed at relevant machines in both environments:
 
[https://googledrive.com/host/0B1lIbYI9LkEJaFA2VjEtWU0tSlU/1.8.3/docs/deployment/pics/deployment.jpg]

In principle, the distinction between the production and testing environments is irrelevant for the ITE, except that it is usually unwise to run test-cases against the production environment. Logging can however be done on any of these environments. E.g. when applied on the testing environment, logging allows us to also log the executions of test suites.  

To ultimately be able to generate test-cases, there is a requirement on the loggers to use. When a logger logs a program P, it should be possible to interpret any log it produces to a sequence of interactions on the program P. Effectively, this means that a generated log should be by "some means" executable (which also implies that this "means" is also a crucial part of your test driver). If P is deterministic, the resulting execution would generate the same log; but we will not make such assumption. Out of the box, we provide two loggers satisfying this requirement. 

== General Steps ==

At the top level the steps needed to deploy testing with the FITTEST ITE are as follows:

  # Prepare the SUT. 
  # Load the ITE, and deploy its agents.
  # Deploy the SUT.

The preparation and deployment of the SUT depends on the logger used. Out of the box, two loggers are provided: PHP and Flash loggers. It is possible to write your own logger by implementing [https://googledrive.com/host/0B1lIbYI9LkEJZUdBUERjTk5sT0E/1.3/docs/advanceduse.html#protocol the protocol between the logger and the agent].

Manuals for doing the above steps are linked below.

  * [https://googledrive.com/host/0B1lIbYI9LkEJaFA2VjEtWU0tSlU/1.8.3/docs/deployment/DeployingAgents.html Deploying FITTEST agents].
  * [https://googledrive.com/host/0B1lIbYI9LkEJWElmRnA2b0NzWW8/1.0/docs/README.html Deploying the SUT with PHPLogger]; this is to log SUT's server-side program written in PHP. No special preparation step is needed on the SUT.

  * [https://googledrive.com/host/0B1lIbYI9LkEJZUdBUERjTk5sT0E/1.3/docs/usage.html Preparing and Deploying the SUT with FlashLogger]; this is to log SUT's Flash-based clients (written in ActionScript or MXML).

 